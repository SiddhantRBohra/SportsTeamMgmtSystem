/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sportsteammgmtsystem;

import java.awt.Color;
import java.awt.Font;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author sidbohra
 */
public class CoachMyFixture extends javax.swing.JFrame {

   int coachId;
   DefaultTableModel data;
    public CoachMyFixture() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.coachId=AddFixture.getCoachId(); //calling static method
        
        // adjust the width
        
           data=(DefaultTableModel)table.getModel(); 
     table.getColumnModel().getColumn(0).setMaxWidth(80);
     table.getColumnModel().getColumn(0).setMinWidth(80); 
     table.getColumnModel().getColumn(1).setMaxWidth(100); 
     table.getColumnModel().getColumn(1).setMinWidth(100); 
     table.getColumnModel().getColumn(2).setMaxWidth(250);
     table.getColumnModel().getColumn(2).setMinWidth(250);
     table.getColumnModel().getColumn(3).setMaxWidth(180);
     table.getColumnModel().getColumn(3).setMinWidth(180);
     table.getColumnModel().getColumn(4).setMaxWidth(150); 
     table.getColumnModel().getColumn(4).setMinWidth(150);
     table.getColumnModel().getColumn(5).setMaxWidth(120); 
     table.getColumnModel().getColumn(5).setMinWidth(120);
     table.getColumnModel().getColumn(6).setMaxWidth(250); 
     table.getColumnModel().getColumn(6).setMinWidth(250);
     table.getColumnModel().getColumn(7).setMaxWidth(120); 
     table.getColumnModel().getColumn(7).setMinWidth(120);
     table.getColumnModel().getColumn(8).setMaxWidth(120); 
     table.getColumnModel().getColumn(8).setMinWidth(120);
    
     JTableHeader header=table.getTableHeader();//header is an object of JTableHEader class
     header.setFont(new Font ("Arial",Font.BOLD,16)); //heading
     table.setRowHeight(40);
     table.setGridColor(Color.blue);
     table.setShowGrid(true);
     table.setFont(new Font ("Arial",Font.BOLD,14)); //records
      
       this.showFixtureRecords();
    }
  public void showFixtureRecords(){
      
       Date today=new Date(); //fetching current system date
       DateFormat df=new SimpleDateFormat("yyyy-MM-dd");
      
        data.setRowCount(0);
       try{
         Class.forName("java.sql.DriverManager");
         Connection con=ConnectDB.getConnect();
         Statement s=con.createStatement();
        
         ResultSet r=s.executeQuery("select * from fixture_details where coach_id ="+this.coachId);
       
          while(r.next()){
              String fixtureDate=r.getString("Date");
               Date fixture_Date=df.parse(fixtureDate); //concverting string into date object
              if(fixture_Date.after(today))
                    data.addRow(new Object[]{false,r.getInt("Fixture_ID"), r.getString("Fixture_Name"),fixtureDate ,
                     r.getString("Organisation"), r.getString("Sport"), r.getString("Venue"),
                     r.getString("Age_Group"), r.getString("Gender") });
            }
          
          DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
          centerRenderer.setHorizontalAlignment(DefaultTableCellRenderer.CENTER);
          
          for(int i = 1; i < table.getColumnCount(); i++){
              table.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
          }
         }catch(Exception e){
             e.printStackTrace();
         }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CoachMyFixturePanel = new javax.swing.JPanel();
        CMF_sp = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        CMF_AddStudentToFixture_btn = new javax.swing.JButton();
        CMF_back_btn = new javax.swing.JButton();
        CMF_CreateParentalConsentForm_btn = new javax.swing.JButton();
        checkstudentavailability_btn = new javax.swing.JButton();
        STMS_lbl3 = new javax.swing.JLabel();
        CMF_lbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CoachMyFixturePanel.setBackground(new java.awt.Color(0, 102, 102));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Select", "Fixture ID", "Fixture", "Date", "Organisation", "Sport", "Venue", "Age Group", "Gender"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        CMF_sp.setViewportView(table);

        CMF_AddStudentToFixture_btn.setFont(new java.awt.Font("Helvetica Neue", 3, 14)); // NOI18N
        CMF_AddStudentToFixture_btn.setForeground(new java.awt.Color(0, 102, 102));
        CMF_AddStudentToFixture_btn.setText("Add Student To Fixture ");
        CMF_AddStudentToFixture_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CMF_AddStudentToFixture_btnActionPerformed(evt);
            }
        });

        CMF_back_btn.setFont(new java.awt.Font("Helvetica Neue", 3, 14)); // NOI18N
        CMF_back_btn.setForeground(new java.awt.Color(0, 102, 102));
        CMF_back_btn.setText("Back");
        CMF_back_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CMF_back_btnActionPerformed(evt);
            }
        });

        CMF_CreateParentalConsentForm_btn.setFont(new java.awt.Font("Helvetica Neue", 3, 14)); // NOI18N
        CMF_CreateParentalConsentForm_btn.setForeground(new java.awt.Color(0, 102, 102));
        CMF_CreateParentalConsentForm_btn.setText("Create Parental Consent Form");
        CMF_CreateParentalConsentForm_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CMF_CreateParentalConsentForm_btnActionPerformed(evt);
            }
        });

        checkstudentavailability_btn.setFont(new java.awt.Font("Helvetica Neue", 3, 14)); // NOI18N
        checkstudentavailability_btn.setForeground(new java.awt.Color(0, 102, 102));
        checkstudentavailability_btn.setText("Team Sheet");
        checkstudentavailability_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkstudentavailability_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CoachMyFixturePanelLayout = new javax.swing.GroupLayout(CoachMyFixturePanel);
        CoachMyFixturePanel.setLayout(CoachMyFixturePanelLayout);
        CoachMyFixturePanelLayout.setHorizontalGroup(
            CoachMyFixturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CoachMyFixturePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CMF_sp, javax.swing.GroupLayout.DEFAULT_SIZE, 1378, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(CoachMyFixturePanelLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(CMF_AddStudentToFixture_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(checkstudentavailability_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(CMF_CreateParentalConsentForm_btn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(CMF_back_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );
        CoachMyFixturePanelLayout.setVerticalGroup(
            CoachMyFixturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CoachMyFixturePanelLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(CMF_sp, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(CoachMyFixturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CMF_AddStudentToFixture_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkstudentavailability_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CMF_CreateParentalConsentForm_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CMF_back_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        getContentPane().add(CoachMyFixturePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 109, 1390, -1));

        STMS_lbl3.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        STMS_lbl3.setForeground(new java.awt.Color(0, 102, 102));
        STMS_lbl3.setText("Sports Team Management System");
        getContentPane().add(STMS_lbl3, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 20, -1, -1));

        CMF_lbl.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        CMF_lbl.setForeground(new java.awt.Color(0, 102, 102));
        CMF_lbl.setText("My Fixtures");
        getContentPane().add(CMF_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 60, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CMF_back_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CMF_back_btnActionPerformed
        CoachDashboard cd = new CoachDashboard();
            cd.setVisible(true);
            this.dispose();
    }//GEN-LAST:event_CMF_back_btnActionPerformed

    private void CMF_AddStudentToFixture_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CMF_AddStudentToFixture_btnActionPerformed

        int count=0; //no of records selected
        int fixtureid=0;
        String fixture=null,agegroup=null,gender=null,date=null,sport=null;
        for(int i=0;i<data.getRowCount();i++){
            
            if(data.getValueAt(i, 0).toString().equals("true")){
                count++;
                fixtureid=Integer.parseInt(data.getValueAt(i, 1).toString());
                fixture=data.getValueAt(i, 2).toString();
                agegroup=data.getValueAt(i, 7).toString();
                gender=data.getValueAt(i, 8).toString();
                sport=data.getValueAt(i, 5).toString();
                date=data.getValueAt(i, 3).toString();           
            }
        }
        if(count==0)
            JOptionPane.showMessageDialog(this, "Please select fixture from a table");
        else if(count>1)
         JOptionPane.showMessageDialog(this, "Please select only one fixture at a time");
        else{
            AddStudentToFixture astf=new AddStudentToFixture(fixtureid,fixture,agegroup,gender,date,sport);
            astf.setVisible(true);
            this.dispose();
            
            
        }   
        
        
        
        
        
    }//GEN-LAST:event_CMF_AddStudentToFixture_btnActionPerformed

    private void CMF_CreateParentalConsentForm_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CMF_CreateParentalConsentForm_btnActionPerformed
       
        int count=0; //no of records selected
        int fixtureid=0;
        String fixture=null,agegroup=null,gender=null,date=null,sport=null;
        for(int i=0;i<data.getRowCount();i++){
            
            if(data.getValueAt(i, 0).toString().equals("true")){
                count++;
                fixtureid=Integer.parseInt(data.getValueAt(i, 1).toString());
               
                
            }
        }
        if(count==0)
            JOptionPane.showMessageDialog(this, "Please select fixture from a table");
        else if(count>1)
         JOptionPane.showMessageDialog(this, "Please select only one fixture at a time");
        else{
            ConsentFormsDashboard cfd =new ConsentFormsDashboard(fixtureid);
            cfd.setVisible(true);
            this.dispose();
            
            
        }   
        
    }//GEN-LAST:event_CMF_CreateParentalConsentForm_btnActionPerformed

    private void checkstudentavailability_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkstudentavailability_btnActionPerformed
        int count=0; //no of records selected
        int fixtureid=0;
        String fixture=null,agegroup=null,gender=null,date=null,sport=null,fixture_name=null;
        for(int i=0;i<data.getRowCount();i++){
            if(data.getValueAt(i, 0).toString().equals("true")){
                count++;
                fixtureid=Integer.parseInt(data.getValueAt(i, 1).toString());
                fixture_name=data.getValueAt(i, 2).toString();
                date=data.getValueAt(i, 3).toString();
                sport=data.getValueAt(i, 5).toString();
                agegroup=data.getValueAt(i, 7).toString();
                gender=data.getValueAt(i, 8).toString();     
            }
        }
        if(count==0)
            JOptionPane.showMessageDialog(this, "Please select fixture from a table");
        else if(count>1)
         JOptionPane.showMessageDialog(this, "Please select only one fixture at a time");
        else{
            FixtureTeamSheet sa =new FixtureTeamSheet(fixtureid,fixture_name,date,sport,agegroup,gender);
            sa.setVisible(true);
            this.dispose();
        }
        
        
        
    }//GEN-LAST:event_checkstudentavailability_btnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CoachMyFixture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CoachMyFixture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CoachMyFixture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CoachMyFixture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CoachMyFixture().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CMF_AddStudentToFixture_btn;
    private javax.swing.JButton CMF_CreateParentalConsentForm_btn;
    private javax.swing.JButton CMF_back_btn;
    private javax.swing.JLabel CMF_lbl;
    private javax.swing.JScrollPane CMF_sp;
    private javax.swing.JPanel CoachMyFixturePanel;
    private javax.swing.JLabel STMS_lbl3;
    private javax.swing.JButton checkstudentavailability_btn;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
