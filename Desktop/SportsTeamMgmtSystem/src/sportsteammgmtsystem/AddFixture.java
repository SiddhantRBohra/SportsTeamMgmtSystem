/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sportsteammgmtsystem;

import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author sidbohra
 */
public class AddFixture extends javax.swing.JFrame {

    private int coachID;
    private int fixtureID;
    private String fixtureName, organisation, sport, venue, ageGroup, gender, departureTime, gameStartTime, gameEndTime, description, date;
   boolean flag=false;
    
    public AddFixture() {
        initComponents();
        this.update_lbl.setVisible(false);
        this.date_txt.setVisible(false);
        this.sport_txt.setVisible(false);
        this.organisation_txt.setVisible(false);
        this.updatefixture_agegroup_txt.setVisible(false);
        this.updatefixture_gender_txt.setVisible(false);
        this.AF_SaveDetails_btn.setVisible(false);
        this.AF_AddFixture_btn.setVisible(true);
        int min =100,max =999;
        this.fixtureID = (int)Math.floor(Math.random() * (max - min + 1) + min);
        this.AF_FixtureID_txt.setText(Integer.toString(this.fixtureID));
    }
      public AddFixture(int fixtureid) {
        initComponents();
        this.fixtureID=fixtureid;
        flag=true;
        this.update_lbl.setVisible(true);
        this.date_txt.setVisible(true);  //set them true
        this.sport_txt.setVisible(true);
        this.organisation_txt.setVisible(true);
        this.updatefixture_agegroup_txt.setVisible(true);
        this.updatefixture_gender_txt.setVisible(true);
        this.AF_SaveDetails_btn.setVisible(true);
        this.AF_AddFixture_btn.setVisible(false);
      
        this.AF_FixtureID_txt.setText(Integer.toString(fixtureid));
      
        
      getData(fixtureid);
        
    }
      
      public void getData(int fixtureid){
          
        try{
         Class.forName("java.sql.DriverManager");
         Connection con=ConnectDB.getConnect();
         Statement s=con.createStatement();
        
         ResultSet r=s.executeQuery("select * from fixture_details where fixture_ID = "+fixtureid);
       
        if(r.next()){
              this.AF_FixtureName_txt.setText(r.getString("fixture_name"));
              this.AF_Venue_txt.setText(r.getString("venue"));
              this.date_txt.setText(r.getString("date"));
              this.sport_txt.setText(r.getString("sport"));
              this.organisation_txt.setText(r.getString("organisation"));
              this.updatefixture_agegroup_txt.setText(r.getString("age_group"));
              this.updatefixture_gender_txt.setText(r.getString("gender"));
              this.AF_DepartureTime_txt.setText(r.getString("departure_time"));
              this.AF_FixtureStartTime_txt.setText(r.getString("gamestart_time"));
              this.AF_FixtureEndTime_txt.setText(r.getString("return_time"));
              this.createFixture_Desc_txt.setText(r.getString("description"));
            }
         }catch(Exception e){
             e.printStackTrace();
         }
          
      }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AddFixturePanel = new javax.swing.JPanel();
        AF_FixtureID_lbl = new javax.swing.JLabel();
        AF_FixtureName_lbl = new javax.swing.JLabel();
        AF_AddFixture_btn = new javax.swing.JButton();
        AF_Date_lbl = new javax.swing.JLabel();
        AF_Sport_lbl = new javax.swing.JLabel();
        AF_Organisation_lbl = new javax.swing.JLabel();
        AF_FixtureID_txt = new javax.swing.JTextField();
        AF_back_btn = new javax.swing.JButton();
        AF_FixtureName_txt = new javax.swing.JTextField();
        AF_Date_DC = new com.toedter.calendar.JDateChooser();
        AF_AgeGroup_lbl = new javax.swing.JLabel();
        AF_Gender_lbl = new javax.swing.JLabel();
        AF_DepartureTime_lbl = new javax.swing.JLabel();
        AF_FixtureStartTime_lbl = new javax.swing.JLabel();
        AF_FixtureEndTime_lbl = new javax.swing.JLabel();
        AF_Description_lbl = new javax.swing.JLabel();
        AF_Organisation_CB = new javax.swing.JComboBox<>();
        AF_Sport_CB = new javax.swing.JComboBox<>();
        AF_AgeGroup_CB = new javax.swing.JComboBox<>();
        AF_Gender_CB = new javax.swing.JComboBox<>();
        AF_DepartureTime_txt = new javax.swing.JTextField();
        AF_FixtureEndTime_txt = new javax.swing.JTextField();
        AF_FixtureStartTime_txt = new javax.swing.JTextField();
        AF_Venue_txt = new javax.swing.JTextField();
        AF_Venue_lbl = new javax.swing.JLabel();
        AF_Description_sp = new javax.swing.JScrollPane();
        createFixture_Desc_txt = new javax.swing.JTextArea();
        AF_Reset_btn = new javax.swing.JButton();
        date_txt = new javax.swing.JTextField();
        sport_txt = new javax.swing.JTextField();
        organisation_txt = new javax.swing.JTextField();
        updatefixture_agegroup_txt = new javax.swing.JTextField();
        updatefixture_gender_txt = new javax.swing.JTextField();
        AF_SaveDetails_btn = new javax.swing.JButton();
        STMS_lbl = new javax.swing.JLabel();
        update_lbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        AddFixturePanel.setBackground(new java.awt.Color(0, 102, 102));

        AF_FixtureID_lbl.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        AF_FixtureID_lbl.setForeground(new java.awt.Color(255, 255, 255));
        AF_FixtureID_lbl.setText("Fixture ID");

        AF_FixtureName_lbl.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        AF_FixtureName_lbl.setForeground(new java.awt.Color(255, 255, 255));
        AF_FixtureName_lbl.setText("Fixture Name");

        AF_AddFixture_btn.setFont(new java.awt.Font("Helvetica Neue", 3, 14)); // NOI18N
        AF_AddFixture_btn.setForeground(new java.awt.Color(0, 102, 102));
        AF_AddFixture_btn.setText("Add");
        AF_AddFixture_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AF_AddFixture_btnActionPerformed(evt);
            }
        });

        AF_Date_lbl.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        AF_Date_lbl.setForeground(new java.awt.Color(255, 255, 255));
        AF_Date_lbl.setText("Date");

        AF_Sport_lbl.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        AF_Sport_lbl.setForeground(new java.awt.Color(255, 255, 255));
        AF_Sport_lbl.setText("Sport");

        AF_Organisation_lbl.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        AF_Organisation_lbl.setForeground(new java.awt.Color(255, 255, 255));
        AF_Organisation_lbl.setText("Organisation");

        AF_FixtureID_txt.setEditable(false);
        AF_FixtureID_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AF_FixtureID_txtActionPerformed(evt);
            }
        });

        AF_back_btn.setFont(new java.awt.Font("Helvetica Neue", 3, 14)); // NOI18N
        AF_back_btn.setForeground(new java.awt.Color(0, 102, 102));
        AF_back_btn.setText("Back");
        AF_back_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AF_back_btnActionPerformed(evt);
            }
        });

        AF_FixtureName_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AF_FixtureName_txtActionPerformed(evt);
            }
        });

        AF_AgeGroup_lbl.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        AF_AgeGroup_lbl.setForeground(new java.awt.Color(255, 255, 255));
        AF_AgeGroup_lbl.setText("Age Group");

        AF_Gender_lbl.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        AF_Gender_lbl.setForeground(new java.awt.Color(255, 255, 255));
        AF_Gender_lbl.setText("Gender");

        AF_DepartureTime_lbl.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        AF_DepartureTime_lbl.setForeground(new java.awt.Color(255, 255, 255));
        AF_DepartureTime_lbl.setText("Departure Time");

        AF_FixtureStartTime_lbl.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        AF_FixtureStartTime_lbl.setForeground(new java.awt.Color(255, 255, 255));
        AF_FixtureStartTime_lbl.setText("Fixture Start Time");

        AF_FixtureEndTime_lbl.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        AF_FixtureEndTime_lbl.setForeground(new java.awt.Color(255, 255, 255));
        AF_FixtureEndTime_lbl.setText("Fixture End Time");

        AF_Description_lbl.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        AF_Description_lbl.setForeground(new java.awt.Color(255, 255, 255));
        AF_Description_lbl.setText("Description");

        AF_Organisation_CB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "HKSSF", "ISSFHK", "ESF League" }));

        AF_Sport_CB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Volleyball", "Football", "Basketball", "Rugby", "Tennis", "Badminton", "Swimming", "Cross Country", "Table Tennis", "Netball" }));

        AF_AgeGroup_CB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "U12", "U13", "U14", "U15", "U16", "U17", "U18" }));

        AF_Gender_CB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Male", "Female" }));

        AF_DepartureTime_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AF_DepartureTime_txtActionPerformed(evt);
            }
        });

        AF_FixtureEndTime_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AF_FixtureEndTime_txtActionPerformed(evt);
            }
        });

        AF_FixtureStartTime_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AF_FixtureStartTime_txtActionPerformed(evt);
            }
        });

        AF_Venue_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AF_Venue_txtActionPerformed(evt);
            }
        });

        AF_Venue_lbl.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        AF_Venue_lbl.setForeground(new java.awt.Color(255, 255, 255));
        AF_Venue_lbl.setText("Venue");

        createFixture_Desc_txt.setColumns(20);
        createFixture_Desc_txt.setLineWrap(true);
        createFixture_Desc_txt.setRows(5);
        AF_Description_sp.setViewportView(createFixture_Desc_txt);

        AF_Reset_btn.setFont(new java.awt.Font("Helvetica Neue", 3, 14)); // NOI18N
        AF_Reset_btn.setForeground(new java.awt.Color(0, 102, 102));
        AF_Reset_btn.setText("Reset");
        AF_Reset_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AF_Reset_btnActionPerformed(evt);
            }
        });

        date_txt.setEditable(false);

        sport_txt.setEditable(false);

        organisation_txt.setEditable(false);
        organisation_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organisation_txtActionPerformed(evt);
            }
        });

        updatefixture_agegroup_txt.setEditable(false);

        updatefixture_gender_txt.setEditable(false);

        AF_SaveDetails_btn.setFont(new java.awt.Font("Helvetica Neue", 3, 14)); // NOI18N
        AF_SaveDetails_btn.setForeground(new java.awt.Color(0, 102, 102));
        AF_SaveDetails_btn.setText("Save Details");
        AF_SaveDetails_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AF_SaveDetails_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AddFixturePanelLayout = new javax.swing.GroupLayout(AddFixturePanel);
        AddFixturePanel.setLayout(AddFixturePanelLayout);
        AddFixturePanelLayout.setHorizontalGroup(
            AddFixturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddFixturePanelLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(AddFixturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(AF_Gender_lbl)
                    .addComponent(AF_Sport_lbl)
                    .addComponent(AF_FixtureID_lbl)
                    .addComponent(AF_FixtureName_lbl)
                    .addComponent(AF_Date_lbl)
                    .addComponent(AF_Organisation_lbl)
                    .addComponent(AF_AgeGroup_lbl)
                    .addComponent(AF_Venue_lbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AddFixturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddFixturePanelLayout.createSequentialGroup()
                        .addGroup(AddFixturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AddFixturePanelLayout.createSequentialGroup()
                                .addGroup(AddFixturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, AddFixturePanelLayout.createSequentialGroup()
                                        .addComponent(AF_FixtureID_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(37, 37, 37)
                                        .addComponent(AF_DepartureTime_lbl))
                                    .addComponent(AF_FixtureStartTime_lbl)
                                    .addGroup(AddFixturePanelLayout.createSequentialGroup()
                                        .addComponent(AF_Date_DC, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(AF_FixtureEndTime_lbl)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(AddFixturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(AF_DepartureTime_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(AF_FixtureEndTime_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(AF_FixtureStartTime_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(AddFixturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(date_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(AF_FixtureName_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(117, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddFixturePanelLayout.createSequentialGroup()
                        .addGroup(AddFixturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AddFixturePanelLayout.createSequentialGroup()
                                .addComponent(AF_Sport_CB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(sport_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(AF_Description_lbl))
                            .addGroup(AddFixturePanelLayout.createSequentialGroup()
                                .addGroup(AddFixturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(AddFixturePanelLayout.createSequentialGroup()
                                        .addComponent(AF_Organisation_CB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(32, 32, 32)
                                        .addComponent(organisation_txt)
                                        .addGap(8, 8, 8))
                                    .addComponent(AF_Venue_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(AddFixturePanelLayout.createSequentialGroup()
                                        .addGroup(AddFixturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(AF_AgeGroup_CB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(AF_Gender_CB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(60, 60, 60)
                                        .addGroup(AddFixturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(updatefixture_agegroup_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(updatefixture_gender_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGroup(AddFixturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AddFixturePanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(AddFixturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddFixturePanelLayout.createSequentialGroup()
                                        .addComponent(AF_AddFixture_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(AF_Reset_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(12, 12, 12)
                                        .addComponent(AF_back_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(86, 86, 86))
                                    .addGroup(AddFixturePanelLayout.createSequentialGroup()
                                        .addComponent(AF_Description_sp, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(74, 74, 74))))
                            .addGroup(AddFixturePanelLayout.createSequentialGroup()
                                .addGap(72, 72, 72)
                                .addComponent(AF_SaveDetails_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))))))
        );
        AddFixturePanelLayout.setVerticalGroup(
            AddFixturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddFixturePanelLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(AddFixturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AF_FixtureID_lbl)
                    .addComponent(AF_FixtureID_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AF_DepartureTime_lbl)
                    .addComponent(AF_DepartureTime_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(AddFixturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AF_FixtureName_lbl)
                    .addComponent(AF_FixtureName_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AF_FixtureStartTime_lbl)
                    .addComponent(AF_FixtureStartTime_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(AddFixturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AF_Date_lbl)
                    .addComponent(AF_Date_DC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(AddFixturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(AF_FixtureEndTime_lbl)
                        .addComponent(date_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(AF_FixtureEndTime_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(AddFixturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddFixturePanelLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(AddFixturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AF_Description_lbl)
                            .addComponent(AF_Description_sp, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(AddFixturePanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(AddFixturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AF_Sport_CB, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AF_Sport_lbl)
                            .addComponent(sport_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(AddFixturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AF_Organisation_CB, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AF_Organisation_lbl)
                            .addComponent(organisation_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(AddFixturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AF_Venue_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AF_Venue_lbl))
                        .addGap(18, 18, 18)
                        .addGroup(AddFixturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AF_AgeGroup_CB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AF_AgeGroup_lbl)
                            .addComponent(updatefixture_agegroup_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(AddFixturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AF_Gender_CB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AF_Gender_lbl)
                            .addComponent(updatefixture_gender_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(AddFixturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AF_back_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AF_AddFixture_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AF_Reset_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(AF_SaveDetails_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 137, Short.MAX_VALUE))
        );

        STMS_lbl.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        STMS_lbl.setForeground(new java.awt.Color(0, 102, 102));
        STMS_lbl.setText("Sports Team Management System");

        update_lbl.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        update_lbl.setForeground(new java.awt.Color(255, 0, 51));
        update_lbl.setText("Update Entries within given fields");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(AddFixturePanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(STMS_lbl)
                        .addGap(234, 234, 234))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(update_lbl)
                        .addGap(279, 279, 279))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(STMS_lbl)
                .addGap(33, 33, 33)
                .addComponent(update_lbl)
                .addGap(18, 18, 18)
                .addComponent(AddFixturePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public static int  getCoachId(){
    
    int coachId=0; //local integer variable 
    String name=LoginPage.coachName; //Setting variable name to public static reference 
             
    //Converting name object to string representation, split name based on space into substrings
     String fname=name.toString().split(" ")[0]; //firstname is first element from resulting substring array
     String lname=name.toString().split(" ")[1]; //lastname is second element from resulting substring array
     try{              
            Class.forName("java.sql.DriverManager"); //Establishing DB connection
            Connection con = ConnectDB.getConnect();
            Statement st=con.createStatement();
            ResultSet r=st.executeQuery("select coach_id from coach_details where firstname='"+fname+"' and lastname='"
            +lname+"'" ); //Fetching coachId value based on substrings and storing it into object r
           if (r.next()) //when coachid found based on split name
            {
               coachId=r.getInt(1); //local variable assigned to first column in data stored in object r
                
            }
           
        }catch(Exception e){
            e.printStackTrace();
            
        }   
 return coachId; //returning coachId to calling function getCoachId
}
    private void AF_AddFixture_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AF_AddFixture_btnActionPerformed
       this.coachID=getCoachId(); //getting coach id of logged in coach
        if(flag){
            updateRecords();
        }else{
        
        if(validateEntries()==true)
        insertRecords();  ///insert in db table student_details
        
        }
    }//GEN-LAST:event_AF_AddFixture_btnActionPerformed

    public void updateRecords(){
        DateFormat df=new SimpleDateFormat("yyyy-MM-dd");
         Date  date_updated=this.AF_Date_DC.getDate(); 
         String dateNew=df.format(date_updated);
        
        try {
            Class.forName("java.sql.DriverManager"); //loading drivers to connect GUI with databse
            Connection c = ConnectDB.getConnect(); //getting connection with Sports_db
            Statement st = c.createStatement(); //enabling SQL statements  in java code
            
            int y = st.executeUpdate("UPDATE fixture_details SET fixture_name ='"+this.AF_FixtureName_txt.getText()+"',date = '"+dateNew+"',"
                    + " organisation = '" + this.AF_Organisation_CB.getSelectedItem().toString()+ "',"
                    + " sport = '" + this.AF_Sport_CB.getSelectedItem().toString()+ "',venue='"+this.AF_Venue_txt.getText()+"',age_group='"+this.AF_AgeGroup_CB.getSelectedItem().toString()+"',"
                            + "gender='"+this.AF_Gender_CB.getSelectedItem().toString()+"',departure_time='"+this.AF_DepartureTime_txt.getText()+"',"
                                    + "gamestart_time='"+this.AF_FixtureStartTime_txt.getText()+"',return_time='"+this.AF_FixtureEndTime_txt.getText()+"',description='"+this.createFixture_Desc_txt.getText()+"'where fixture_id="+this.fixtureID); 
            
            if (y > 0) {
                JOptionPane.showMessageDialog(this, "Congratulations! The fixture has been updated"); 
               
                   AllUpcomingFixtures lp=new AllUpcomingFixtures(LoginPage.name);
                   lp.setVisible(true);
                this.dispose();
               
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e.getMessage());
        }      
    }
    public boolean validateEntries() {
    boolean flag = true;
    Date today=new Date();//to fetch system's current date
     Date  date11=this.AF_Date_DC.getDate(); 
    if(this.AF_FixtureName_txt.getText().isEmpty()){
       flag = false;
       JOptionPane.showMessageDialog(this, "Please enter the Fixture Name");}
    else if(this.AF_Date_DC.getDate().toString().isEmpty()) {
        flag = false;
        JOptionPane.showMessageDialog(this, "Please enter the Fixture Date");}
    else if (this.AF_Organisation_CB.getSelectedItem().toString().equals("Select")){
        flag = false;
        JOptionPane.showMessageDialog(this, "Please enter the Fixture Organisation");}  
    else if(this.AF_Sport_CB.getSelectedItem().toString().equals("Select")){
        flag = false;
        JOptionPane.showMessageDialog(this, "Please select the sport");}
    else if(this.AF_Sport_CB.getSelectedItem().toString().equals("Select")){
        flag = false;
        JOptionPane.showMessageDialog(this, "Please select the sport");}
    else if(this.AF_AgeGroup_CB.getSelectedItem().toString().equals("Select")){
        flag = false;
        JOptionPane.showMessageDialog(this, "Please select the Age Group");}
    else if(this.AF_Gender_CB.toString().equals("Select")){
        flag = false;
        JOptionPane.showMessageDialog(this, "Please select the Gender");}
    else if(this.AF_DepartureTime_txt.getText().isEmpty()){
        flag = false;
        JOptionPane.showMessageDialog(this, "Please enter the Departure Time");}
    else if(this.AF_FixtureStartTime_txt.getText().isEmpty()){
        flag = false;
        JOptionPane.showMessageDialog(this, "Please enter the Fixture Start Time");}
    else if(this.AF_FixtureEndTime_txt.getText().isEmpty()){
        flag = false;
        JOptionPane.showMessageDialog(this, "Please enter the Fixture End Time");}
    else if (this.AF_Venue_txt.getText().isEmpty()){
        flag = false;
        JOptionPane.showMessageDialog(this, "Please enter the venue");}
    else if(this.AF_Date_DC.getDate()==null){
        flag = false;
        JOptionPane.showMessageDialog(this, "Please enter the fixture date");}
    else if(date11.before(today)){
        flag=false;
        JOptionPane.showMessageDialog(this, "You cannot choose a past date for fixture");}
    else if (this.createFixture_Desc_txt.getText().isEmpty()){
        this.description = "nil";
    } else {
        this.description = this.createFixture_Desc_txt.getText();
    }
     
        
    if(flag){
        
        
            Date  date1=this.AF_Date_DC.getDate();
            System.out.println("date ="+date1);
            
            DateFormat df=new SimpleDateFormat("yyyy-MM-dd");
            this.date=df.format(date1);
            
            this.fixtureName = this.AF_FixtureName_txt.getText();
            this.organisation = this.AF_Organisation_CB.getSelectedItem().toString();
            this.sport = this.AF_Sport_CB.getSelectedItem().toString();
            this.venue = this.AF_Venue_txt.getText();
            this.ageGroup = this.AF_AgeGroup_CB.getSelectedItem().toString();
            this.gender = this.AF_Gender_CB.getSelectedItem().toString();
            this.departureTime = this.AF_DepartureTime_txt.getText();
            this.gameStartTime = this.AF_FixtureStartTime_txt.getText();
            this.gameEndTime = this.AF_FixtureEndTime_txt.getText();
        
    }
    return flag;
}
    
    



private void insertRecords() {
      try {
            Class.forName("java.sql.DriverManager"); //loading drivers to connect GUI with databse
            Connection c = ConnectDB.getConnect(); //getting connection with Sports_db
            Statement st = c.createStatement(); //enabling SQL statements  in java code
            
            int y = st.executeUpdate("insert into fixture_details values("+this.fixtureID+",'"+this.fixtureName + "','" 
                    + this.date+ "','" +this.organisation+"','" +this.sport+"','"+this.venue+"','"+this.ageGroup+"','"+this.gender+"',"
                            + "'"+this.departureTime+"','"+this.gameStartTime+"','"+this.gameEndTime+"','"+this.description+"',"+this.coachID+")"); 
            
            if (y > 0) {
                JOptionPane.showMessageDialog(this, "Congratulations! The fixture has been added to ALL Upcoming Fixtures"); 
               
                   AllUpcomingFixtures lp=new AllUpcomingFixtures(LoginPage.name);
                   lp.setVisible(true);
                this.dispose();
               
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    
    
    }
    
    
    
    private void AF_FixtureID_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AF_FixtureID_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AF_FixtureID_txtActionPerformed

    private void AF_back_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AF_back_btnActionPerformed
        AllUpcomingFixtures auf = new AllUpcomingFixtures(LoginPage.name);
            auf.setVisible(true);
            this.dispose();
    }//GEN-LAST:event_AF_back_btnActionPerformed

    private void AF_FixtureName_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AF_FixtureName_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AF_FixtureName_txtActionPerformed

    private void AF_DepartureTime_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AF_DepartureTime_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AF_DepartureTime_txtActionPerformed

    private void AF_FixtureEndTime_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AF_FixtureEndTime_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AF_FixtureEndTime_txtActionPerformed

    private void AF_FixtureStartTime_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AF_FixtureStartTime_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AF_FixtureStartTime_txtActionPerformed

    private void AF_Venue_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AF_Venue_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AF_Venue_txtActionPerformed

    private void AF_Reset_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AF_Reset_btnActionPerformed
        this.AF_FixtureName_txt.setText("");
        this.AF_AgeGroup_CB.setSelectedItem("Select");
        this.AF_DepartureTime_txt.setText("");
        this.AF_FixtureEndTime_txt.setText("");
        this.AF_FixtureStartTime_txt.setText("");
        this.AF_Gender_CB.setSelectedItem("Select");
        this.AF_Organisation_CB.setSelectedItem("Select");
        this.AF_Sport_CB.setSelectedItem("Select");
        this.AF_Venue_txt.setText("");
    }//GEN-LAST:event_AF_Reset_btnActionPerformed

    private void organisation_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organisation_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_organisation_txtActionPerformed

    private void AF_SaveDetails_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AF_SaveDetails_btnActionPerformed
        int result = JOptionPane.showConfirmDialog(this,"Are you sure to update fixture details  "+this.fixtureID+" "
                + "", "Update Fixture Details",
               JOptionPane.YES_NO_OPTION,
               JOptionPane.QUESTION_MESSAGE);
            if(result == JOptionPane.YES_OPTION)
                    this.updateRecords();
    }//GEN-LAST:event_AF_SaveDetails_btnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddFixture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddFixture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddFixture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddFixture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddFixture().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AF_AddFixture_btn;
    private javax.swing.JComboBox<String> AF_AgeGroup_CB;
    private javax.swing.JLabel AF_AgeGroup_lbl;
    private com.toedter.calendar.JDateChooser AF_Date_DC;
    private javax.swing.JLabel AF_Date_lbl;
    private javax.swing.JLabel AF_DepartureTime_lbl;
    private javax.swing.JTextField AF_DepartureTime_txt;
    private javax.swing.JLabel AF_Description_lbl;
    private javax.swing.JScrollPane AF_Description_sp;
    private javax.swing.JLabel AF_FixtureEndTime_lbl;
    private javax.swing.JTextField AF_FixtureEndTime_txt;
    private javax.swing.JLabel AF_FixtureID_lbl;
    private javax.swing.JTextField AF_FixtureID_txt;
    private javax.swing.JLabel AF_FixtureName_lbl;
    private javax.swing.JTextField AF_FixtureName_txt;
    private javax.swing.JLabel AF_FixtureStartTime_lbl;
    private javax.swing.JTextField AF_FixtureStartTime_txt;
    private javax.swing.JComboBox<String> AF_Gender_CB;
    private javax.swing.JLabel AF_Gender_lbl;
    private javax.swing.JComboBox<String> AF_Organisation_CB;
    private javax.swing.JLabel AF_Organisation_lbl;
    private javax.swing.JButton AF_Reset_btn;
    private javax.swing.JButton AF_SaveDetails_btn;
    private javax.swing.JComboBox<String> AF_Sport_CB;
    private javax.swing.JLabel AF_Sport_lbl;
    private javax.swing.JLabel AF_Venue_lbl;
    private javax.swing.JTextField AF_Venue_txt;
    private javax.swing.JButton AF_back_btn;
    private javax.swing.JPanel AddFixturePanel;
    private javax.swing.JLabel STMS_lbl;
    private javax.swing.JTextArea createFixture_Desc_txt;
    private javax.swing.JTextField date_txt;
    private javax.swing.JTextField organisation_txt;
    private javax.swing.JTextField sport_txt;
    private javax.swing.JLabel update_lbl;
    private javax.swing.JTextField updatefixture_agegroup_txt;
    private javax.swing.JTextField updatefixture_gender_txt;
    // End of variables declaration//GEN-END:variables
}
